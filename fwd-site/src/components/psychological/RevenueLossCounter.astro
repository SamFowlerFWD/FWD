---
interface Props {
  dailyLoss?: number;
  businessType?: string;
}

const { 
  dailyLoss = 847,
  businessType = "without automation"
} = Astro.props;

// Calculate losses since page load
const hourlyLoss = Math.round(dailyLoss / 24);
const minuteLoss = Math.round(hourlyLoss / 60);
---

<div class="revenue-loss-counter bg-gradient-to-br from-gold/5 to-gold/10 rounded-2xl p-6 border border-gold/20">
  <div class="flex items-center justify-between mb-4">
    <h3 class="text-lg font-bold text-deep-space">Cost of Waiting</h3>
    <span class="text-xs text-gray-500">Real-time calculation</span>
  </div>
  
  <div class="space-y-4">
    <div>
      <p class="text-sm text-gray-600 mb-1">Since you opened this page:</p>
      <div class="text-4xl font-bold text-gold">
        £<span class="loss-counter" data-minute-loss={minuteLoss}>0</span>
      </div>
      <p class="text-xs text-gray-500 mt-1">Lost to inefficiency</p>
    </div>
    
    <div class="grid grid-cols-3 gap-2 text-center">
      <div class="bg-white/50 rounded-lg p-2">
        <div class="text-lg font-bold text-premium-gray">£{hourlyLoss}</div>
        <div class="text-xs text-gray-500">Per Hour</div>
      </div>
      <div class="bg-white/50 rounded-lg p-2">
        <div class="text-lg font-bold text-premium-gray">£{dailyLoss}</div>
        <div class="text-xs text-gray-500">Per Day</div>
      </div>
      <div class="bg-white/50 rounded-lg p-2">
        <div class="text-lg font-bold text-premium-gray">£{dailyLoss * 30}</div>
        <div class="text-xs text-gray-500">Per Month</div>
      </div>
    </div>
    
    <div class="bg-deep-space/5 rounded-lg p-3">
      <p class="text-sm">
        <span class="font-semibold text-deep-space">Average SMB {businessType}:</span>
        <br />
        <span class="text-gray-600">• 3 hours/day on repetitive tasks</span>
        <br />
        <span class="text-gray-600">• 40% accuracy loss in manual processes</span>
      </p>
    </div>
    
    <button class="btn-urgent w-full group">
      <span>Calculate Your Savings</span>
      <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
      </svg>
    </button>
  </div>
</div>

<script>
  // Real-time loss counter
  const counter = document.querySelector('.loss-counter') as HTMLElement;
  const minuteLoss = parseInt(counter?.dataset.minuteLoss || '14');
  
  if (counter) {
    let totalLoss = 0;
    let seconds = 0;
    
    // Update every second for psychological impact
    setInterval(() => {
      seconds++;
      totalLoss = Math.round((seconds / 60) * minuteLoss);
      
      // Animate the number change
      counter.style.transform = 'scale(1.05)';
      counter.textContent = totalLoss.toLocaleString();
      
      setTimeout(() => {
        counter.style.transform = 'scale(1)';
      }, 200);
      
      // Add urgency at milestones
      if (totalLoss > 0 && totalLoss % 100 === 0) {
        counter.parentElement?.classList.add('animate-urgency-shake');
        setTimeout(() => {
          counter.parentElement?.classList.remove('animate-urgency-shake');
        }, 500);
      }
    }, 1000);
    
    // Visual warning at 5 minutes
    setTimeout(() => {
      const warning = document.createElement('div');
      warning.className = 'mt-3 p-2 bg-gold text-white text-sm rounded-lg animate-slide-up';
      warning.textContent = '⚠️ You\'ve already lost enough for a coffee. Imagine a year...';
      counter.parentElement?.parentElement?.appendChild(warning);
    }, 300000); // 5 minutes
  }
</script>

<style>
  .loss-counter {
    transition: transform 0.2s ease-out;
    display: inline-block;
  }
</style>