---
interface Props {
  initialCompetitors?: number;
  incrementRate?: number;
}

const { 
  initialCompetitors = 47,
  incrementRate = 3600000 // 1 hour in milliseconds
} = Astro.props;

// Calculate current competitors based on today's date
const startDate = new Date('2024-01-01');
const now = new Date();
const hoursPassed = Math.floor((now.getTime() - startDate.getTime()) / incrementRate);
const currentCompetitors = initialCompetitors + hoursPassed;
---

<div class="competitor-clock glass-premium rounded-2xl p-6 shadow-urgent" data-increment-rate={incrementRate}>
  <div class="flex items-center justify-between mb-4">
    <h3 class="text-lg font-bold text-deep-space">While You Read This...</h3>
    <span class="urgency-badge">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      LIVE
    </span>
  </div>
  
  <div class="space-y-3">
    <div class="flex items-center justify-between">
      <span class="text-sm text-gray-600">Norfolk Businesses Using AI:</span>
      <span class="competitor-count text-3xl font-bold ai-gradient-text" data-count={currentCompetitors}>
        {currentCompetitors}
      </span>
    </div>
    
    <div class="flex items-center justify-between">
      <span class="text-sm text-gray-600">Average Cost Savings:</span>
      <span class="text-2xl font-bold text-success-green">70%</span>
    </div>
    
    <div class="bg-urgent-amber/10 rounded-lg p-3 border border-urgent-amber/20">
      <p class="text-sm font-medium text-urgent-amber">
        Your competitors gained <span class="font-bold">3 hours</span> today while you decided
      </p>
    </div>
  </div>
  
  <div class="mt-4 pt-4 border-t border-gray-200">
    <div class="flex items-center gap-2 text-sm text-gray-600">
      <svg class="w-4 h-4 text-trust-blue" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
      </svg>
      <span>Data from Companies House & Norfolk Chamber</span>
    </div>
  </div>
</div>

<script>
  // Real-time counter animation
  const clock = document.querySelector('.competitor-clock') as HTMLElement;
  const counter = clock?.querySelector('.competitor-count') as HTMLElement;
  const incrementRate = parseInt(clock?.dataset.incrementRate || '3600000');
  
  if (counter) {
    let currentCount = parseInt(counter.dataset.count || '0');
    
    // Increment counter at realistic intervals
    setInterval(() => {
      currentCount++;
      counter.textContent = currentCount.toString();
      counter.classList.add('animate-count-up');
      
      // Flash animation on update
      setTimeout(() => {
        counter.classList.remove('animate-count-up');
      }, 500);
      
      // Store in localStorage for persistence
      localStorage.setItem('competitorCount', currentCount.toString());
    }, incrementRate);
    
    // Load from localStorage if available
    const storedCount = localStorage.getItem('competitorCount');
    if (storedCount) {
      currentCount = parseInt(storedCount);
      counter.textContent = currentCount.toString();
    }
  }
  
  // Pulse animation when in view
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-urgency-shake');
        setTimeout(() => {
          entry.target.classList.remove('animate-urgency-shake');
        }, 500);
      }
    });
  });
  
  if (clock) observer.observe(clock);
</script>